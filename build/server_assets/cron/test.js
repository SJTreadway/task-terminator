'use strict';

var CronJob = require('cron').CronJob;
var Project = require('../models/Project');
var projectCtrl = require('../controllers/projectCtrl');
var moment = require('moment');

var job = new CronJob({
    cronTime: '00 00 17 * *',
    onTick: function onTick() {
        var today = moment().utc().hours(23).minute(0).second(0).millisecond(0).toJSON();
        console.log("TODAY", today);
        Project.find({ $and: [{ "setup.dueDate.actual": today }, { status: "Incomplete" }, { overdue: false }] }).exec().then(function (projects) {
            console.log("PROJECTS", projects);
            for (var i = 0; i < projects.length; i++) {
                console.log('CURRENT PROJECT', projects[i]);
                projects[i].overdue = true;
                projects[i].save().then(function (project) {
                    projectCtrl.newProject(project.setup.associatedTemplate).then(function (project) {
                        console.log("NEW PROJECT INSTANCE CREATED", project);
                    });
                });
            }
        }).catch(function (err) {
            console.log("ERROR", err);
        });
    },
    start: false,
    timeZone: 'America/Chicago'
});

module.exports = job;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlcl9hc3NldHMvY3Jvbi90ZXN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSSxVQUFVLFFBQVEsTUFBUixFQUFnQixPQUFoQjtBQUNkLElBQUksVUFBVSxRQUFRLG1CQUFSLENBQVY7QUFDSixJQUFJLGNBQWMsUUFBUSw0QkFBUixDQUFkO0FBQ0osSUFBSSxTQUFTLFFBQVEsUUFBUixDQUFUOztBQUVKLElBQUksTUFBTSxJQUFJLE9BQUosQ0FBWTtBQUNwQixjQUFVLGNBQVY7QUFDQSxZQUFRLGtCQUFXO0FBQ2YsWUFBSSxRQUFRLFNBQVMsR0FBVCxHQUFlLEtBQWYsQ0FBcUIsRUFBckIsRUFBeUIsTUFBekIsQ0FBZ0MsQ0FBaEMsRUFBbUMsTUFBbkMsQ0FBMEMsQ0FBMUMsRUFBNkMsV0FBN0MsQ0FBeUQsQ0FBekQsRUFBNEQsTUFBNUQsRUFBUixDQURXO0FBRWYsZ0JBQVEsR0FBUixDQUFZLE9BQVosRUFBcUIsS0FBckIsRUFGZTtBQUdqQixnQkFBUSxJQUFSLENBQWEsRUFBQyxNQUFLLENBQUMsRUFBQyx3QkFBd0IsS0FBeEIsRUFBRixFQUFrQyxFQUFDLFFBQVEsWUFBUixFQUFuQyxFQUEwRCxFQUFDLFNBQVMsS0FBVCxFQUEzRCxDQUFMLEVBQWQsRUFDQyxJQURELEdBRUMsSUFGRCxDQUVNLFVBQUMsUUFBRCxFQUFjO0FBQ2hCLG9CQUFRLEdBQVIsQ0FBWSxVQUFaLEVBQXdCLFFBQXhCLEVBRGdCO0FBRWhCLGlCQUFLLElBQUksSUFBSSxDQUFKLEVBQU8sSUFBSSxTQUFTLE1BQVQsRUFBaUIsR0FBckMsRUFBMEM7QUFDdEMsd0JBQVEsR0FBUixDQUFZLGlCQUFaLEVBQStCLFNBQVMsQ0FBVCxDQUEvQixFQURzQztBQUV0Qyx5QkFBUyxDQUFULEVBQVksT0FBWixHQUFzQixJQUF0QixDQUZzQztBQUd0Qyx5QkFBUyxDQUFULEVBQVksSUFBWixHQUNDLElBREQsQ0FDTSxVQUFDLE9BQUQsRUFBYTtBQUNmLGdDQUFZLFVBQVosQ0FBdUIsUUFBUSxLQUFSLENBQWMsa0JBQWQsQ0FBdkIsQ0FDQyxJQURELENBQ00sVUFBQyxPQUFELEVBQWE7QUFDZixnQ0FBUSxHQUFSLENBQVksOEJBQVosRUFBNEMsT0FBNUMsRUFEZTtxQkFBYixDQUROLENBRGU7aUJBQWIsQ0FETixDQUhzQzthQUExQztTQUZFLENBRk4sQ0FnQkMsS0FoQkQsQ0FnQk8sVUFBQyxHQUFELEVBQVM7QUFDVCxvQkFBUSxHQUFSLENBQVksT0FBWixFQUFxQixHQUFyQixFQURTO1NBQVQsQ0FoQlAsQ0FIaUI7S0FBWDtBQXVCUixXQUFPLEtBQVA7QUFDQSxjQUFVLGlCQUFWO0NBMUJRLENBQU47O0FBNkJKLE9BQU8sT0FBUCxHQUFpQixHQUFqQiIsImZpbGUiOiJzZXJ2ZXJfYXNzZXRzL2Nyb24vdGVzdC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBDcm9uSm9iID0gcmVxdWlyZSgnY3JvbicpLkNyb25Kb2I7XHJcbnZhciBQcm9qZWN0ID0gcmVxdWlyZSgnLi4vbW9kZWxzL1Byb2plY3QnKTtcclxudmFyIHByb2plY3RDdHJsID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvcHJvamVjdEN0cmwnKTtcclxudmFyIG1vbWVudCA9IHJlcXVpcmUoJ21vbWVudCcpO1xyXG5cclxudmFyIGpvYiA9IG5ldyBDcm9uSm9iKHtcclxuICBjcm9uVGltZTogJzAwIDAwIDE3ICogKicsXHJcbiAgb25UaWNrOiBmdW5jdGlvbigpIHtcclxuICAgICAgdmFyIHRvZGF5ID0gbW9tZW50KCkudXRjKCkuaG91cnMoMjMpLm1pbnV0ZSgwKS5zZWNvbmQoMCkubWlsbGlzZWNvbmQoMCkudG9KU09OKCk7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiVE9EQVlcIiwgdG9kYXkpO1xyXG4gICAgUHJvamVjdC5maW5kKHskYW5kOlt7XCJzZXR1cC5kdWVEYXRlLmFjdHVhbFwiOiB0b2RheX0sIHtzdGF0dXM6IFwiSW5jb21wbGV0ZVwifSwge292ZXJkdWU6IGZhbHNlfV19KVxyXG4gICAgLmV4ZWMoKVxyXG4gICAgLnRoZW4oKHByb2plY3RzKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJQUk9KRUNUU1wiLCBwcm9qZWN0cyk7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9qZWN0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnQ1VSUkVOVCBQUk9KRUNUJywgcHJvamVjdHNbaV0pO1xyXG4gICAgICAgICAgICBwcm9qZWN0c1tpXS5vdmVyZHVlID0gdHJ1ZTtcclxuICAgICAgICAgICAgcHJvamVjdHNbaV0uc2F2ZSgpXHJcbiAgICAgICAgICAgIC50aGVuKChwcm9qZWN0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBwcm9qZWN0Q3RybC5uZXdQcm9qZWN0KHByb2plY3Quc2V0dXAuYXNzb2NpYXRlZFRlbXBsYXRlKVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oKHByb2plY3QpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIk5FVyBQUk9KRUNUIElOU1RBTkNFIENSRUFURURcIiwgcHJvamVjdCk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgIGNvbnNvbGUubG9nKFwiRVJST1JcIiwgZXJyKTtcclxuICAgIH0pO1xyXG4gIH0sXHJcbiAgc3RhcnQ6IGZhbHNlLFxyXG4gIHRpbWVab25lOiAnQW1lcmljYS9DaGljYWdvJ1xyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gam9iOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
