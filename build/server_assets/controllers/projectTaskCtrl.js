'use strict';

var mongoose = require('mongoose');
var randomstring = require('randomstring');
var Project = require('../models/Project.js');
var Task = require('../models/ProjectTask');

module.exports = {
    getTasks: function getTasks(req, res) {
        Project.findById({ _id: req.params.id }).exec().then(function (result) {
            return res.json(result.tasks);
        }).catch(function (err) {
            return res.status(500).end();
        });
    },
    addTask: function addTask(req, res) {
        var newTask = new Task(req.body);
        var ID = req.params.projectid;
        newTask.friendlyId = randomstring.generate({ length: 5, readable: true });
        newTask.associatedProject = ID;
        newTask.save().then(function (task) {
            Project.findByIdAndUpdate(ID, { $push: { "tasks": task._id } }).exec();
        }).then(function () {
            return res.status(201).end();
        }).catch(function (err) {
            return res.status(500).end();
        });
    },
    editTask: function editTask(req, res) {
        Project.findByIdAndUpdate(req.params.id, req.body).exec().then(function () {
            return res.status(200).end();
        }).catch(function (err) {
            return res.status(500).end();
        });
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlcl9hc3NldHMvY29udHJvbGxlcnMvcHJvamVjdFRhc2tDdHJsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTSxXQUFXLFFBQVEsVUFBUixDQUFYO0FBQ04sSUFBTSxlQUFlLFFBQVEsY0FBUixDQUFmO0FBQ04sSUFBTSxVQUFVLFFBQVEsc0JBQVIsQ0FBVjtBQUNOLElBQU0sT0FBTyxRQUFRLHVCQUFSLENBQVA7O0FBR04sT0FBTyxPQUFQLEdBQWlCO0FBRWYsZ0NBQVMsS0FBSyxLQUFLO0FBQ2YsZ0JBQVEsUUFBUixDQUFpQixFQUFDLEtBQUssSUFBSSxNQUFKLENBQVcsRUFBWCxFQUF2QixFQUF1QyxJQUF2QyxHQUE4QyxJQUE5QyxDQUFtRCxVQUFDLE1BQUQsRUFBWTtBQUMzRCxtQkFBTyxJQUFJLElBQUosQ0FBUyxPQUFPLEtBQVAsQ0FBaEIsQ0FEMkQ7U0FBWixDQUFuRCxDQUVHLEtBRkgsQ0FFUyxVQUFDLEdBQUQsRUFBUztBQUNkLG1CQUFPLElBQUksTUFBSixDQUFXLEdBQVgsRUFBZ0IsR0FBaEIsRUFBUCxDQURjO1NBQVQsQ0FGVCxDQURlO0tBRko7QUFVYiw4QkFBUSxLQUFLLEtBQUs7QUFDZCxZQUFNLFVBQVUsSUFBSSxJQUFKLENBQVMsSUFBSSxJQUFKLENBQW5CLENBRFE7QUFFZCxZQUFNLEtBQUssSUFBSSxNQUFKLENBQVcsU0FBWCxDQUZHO0FBR2QsZ0JBQVEsVUFBUixHQUFxQixhQUFhLFFBQWIsQ0FBc0IsRUFBQyxRQUFRLENBQVIsRUFBVyxVQUFVLElBQVYsRUFBbEMsQ0FBckIsQ0FIYztBQUlkLGdCQUFRLGlCQUFSLEdBQTRCLEVBQTVCLENBSmM7QUFLZCxnQkFBUSxJQUFSLEdBQ0MsSUFERCxDQUNNLFVBQUMsSUFBRCxFQUFVO0FBQ1osb0JBQVEsaUJBQVIsQ0FBMEIsRUFBMUIsRUFBOEIsRUFBQyxPQUFPLEVBQUMsU0FBUyxLQUFLLEdBQUwsRUFBakIsRUFBL0IsRUFBNEQsSUFBNUQsR0FEWTtTQUFWLENBRE4sQ0FJQyxJQUpELENBSU0sWUFBTTtBQUNSLG1CQUFPLElBQUksTUFBSixDQUFXLEdBQVgsRUFBZ0IsR0FBaEIsRUFBUCxDQURRO1NBQU4sQ0FKTixDQU9DLEtBUEQsQ0FPTyxVQUFDLEdBQUQsRUFBUztBQUNaLG1CQUFPLElBQUksTUFBSixDQUFXLEdBQVgsRUFBZ0IsR0FBaEIsRUFBUCxDQURZO1NBQVQsQ0FQUCxDQUxjO0tBVkw7QUEyQmIsZ0NBQVMsS0FBSyxLQUFLO0FBQ2YsZ0JBQVEsaUJBQVIsQ0FBMEIsSUFBSSxNQUFKLENBQVcsRUFBWCxFQUFlLElBQUksSUFBSixDQUF6QyxDQUFtRCxJQUFuRCxHQUNDLElBREQsQ0FDTSxZQUFNO0FBQ1IsbUJBQU8sSUFBSSxNQUFKLENBQVcsR0FBWCxFQUFnQixHQUFoQixFQUFQLENBRFE7U0FBTixDQUROLENBSUMsS0FKRCxDQUlPLFVBQUMsR0FBRCxFQUFTO0FBQ1osbUJBQU8sSUFBSSxNQUFKLENBQVcsR0FBWCxFQUFnQixHQUFoQixFQUFQLENBRFk7U0FBVCxDQUpQLENBRGU7S0EzQk47Q0FBakIiLCJmaWxlIjoic2VydmVyX2Fzc2V0cy9jb250cm9sbGVycy9wcm9qZWN0VGFza0N0cmwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbmNvbnN0IHJhbmRvbXN0cmluZyA9IHJlcXVpcmUoJ3JhbmRvbXN0cmluZycpO1xyXG5jb25zdCBQcm9qZWN0ID0gcmVxdWlyZSgnLi4vbW9kZWxzL1Byb2plY3QuanMnKTtcclxuY29uc3QgVGFzayA9IHJlcXVpcmUoJy4uL21vZGVscy9Qcm9qZWN0VGFzaycpO1xyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG5cclxuICBnZXRUYXNrcyhyZXEsIHJlcykge1xyXG4gICAgICBQcm9qZWN0LmZpbmRCeUlkKHtfaWQ6IHJlcS5wYXJhbXMuaWR9KS5leGVjKCkudGhlbigocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24ocmVzdWx0LnRhc2tzKTtcclxuICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5lbmQoKTtcclxuICAgICAgfSk7XHJcbiAgfSxcclxuICAgIFxyXG4gICAgYWRkVGFzayhyZXEsIHJlcykge1xyXG4gICAgICAgIGNvbnN0IG5ld1Rhc2sgPSBuZXcgVGFzayhyZXEuYm9keSk7XHJcbiAgICAgICAgY29uc3QgSUQgPSByZXEucGFyYW1zLnByb2plY3RpZDtcclxuICAgICAgICBuZXdUYXNrLmZyaWVuZGx5SWQgPSByYW5kb21zdHJpbmcuZ2VuZXJhdGUoe2xlbmd0aDogNSwgcmVhZGFibGU6IHRydWV9KTtcclxuICAgICAgICBuZXdUYXNrLmFzc29jaWF0ZWRQcm9qZWN0ID0gSUQ7XHJcbiAgICAgICAgbmV3VGFzay5zYXZlKClcclxuICAgICAgICAudGhlbigodGFzaykgPT4ge1xyXG4gICAgICAgICAgICBQcm9qZWN0LmZpbmRCeUlkQW5kVXBkYXRlKElELCB7JHB1c2g6IHtcInRhc2tzXCI6IHRhc2suX2lkfX0pLmV4ZWMoKVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDEpLmVuZCgpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5lbmQoKTtcclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcblxyXG4gICAgZWRpdFRhc2socmVxLCByZXMpIHtcclxuICAgICAgICBQcm9qZWN0LmZpbmRCeUlkQW5kVXBkYXRlKHJlcS5wYXJhbXMuaWQsIHJlcS5ib2R5KS5leGVjKClcclxuICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuZW5kKCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmVuZCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
